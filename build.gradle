buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url 'https://repo.maven.apache.org/maven2'
            name 'Maven Central'
        }
    }
    dependencies {
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE'
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
        classpath 'org.json:json:20210307'
    }
}

subprojects{
    apply plugin: 'java'
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url 'https://repo.maven.apache.org/maven2'
            name 'Maven Central'
        }
    }
    dependencies {
        compile group: 'org.springframework', name: 'spring-context', version: '4.3.7.RELEASE'
        implementation 'org.json:json:20210307'
        testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0'
        testImplementation 'org.mockito:mockito-core:3.12.4'
        testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
    }
    test {
        useJUnitPlatform()
    }
}


project(':common') {
    dependencies{
    }
}

project(':server-core') {
    apply plugin: 'war'
    apply plugin: 'gradle-one-jar'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'com.bmuschko.tomcat'
    apply plugin: 'java-library-distribution'

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot-devtools")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        compile project(':common')
        compile project(':tracker-core')
        def tomcatVersion = '9.0.17'
        def juliVersion = '9.0.0.M6'
        tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
                "org.apache.tomcat.embed:tomcat-embed-logging-juli:${juliVersion}",
                "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
    }
    tomcat {
        httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
        ajpProtocol = 'org.apache.coyote.ajp.AjpNio2Protocol'
    }
}

project(':server-ui') {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot-devtools")
        compile("org.springframework.boot:spring-boot-starter-security")
        // end::security[]
        testCompile("org.springframework.boot:spring-boot-starter-test")
        testCompile("org.springframework.security:spring-security-test")
    }

    jar {
        baseName = 'security-boot'
        version =  '0.1.0'
    }
}

project(':tracker-core') {
    apply plugin: 'java-library-distribution'
    apply plugin: 'gradle-one-jar'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'war'

    dependencies {
        compile project(':common')
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot-devtools")
        implementation 'org.json:json:20210307'
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }

    task fatJar(type: OneJar) {
        mainClass = 'jdev.tracker.Main'
    }
}

project(':tracker-ui') {
}


